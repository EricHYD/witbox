#!/bin/sh

if [ $# = 1 ]; then
	boot=$1
	repo=$1/iso
elif [ $# = 2 ]; then
	boot=$2
	repo=$1
else
	echo "usage: $0 [iso path] <mount point>"
	exit 1
fi

part=""
while read mnt
do
	mnt=($mnt)
	if [ ${boot} == ${mnt[1]} ]; then
		part=${mnt[0]}
		break
	fi
done < /proc/mounts

if [ "$part" == "" ]; then
	echo "No such mount point found! ($boot)"
	exit 1
fi

disk=${part%%[0-9]}
index=${part#$disk}

############### copy ISO ###############
boot_iso=$boot/iso
mkdir -p $boot_iso

if [ -f $repo ]; then
	iso_list=$repo
elif [ -d $repo ]; then
	iso_list=`ls $repo/*.iso`
else
	echo "'$repo' is invalid!"
	exit 1
fi

for img in $iso_list
do
	if [ ! -e $boot_iso/$img ]; then
		cp -v $img $boot_iso
	fi
done

############# install grub #############
echo "installing grub to $boot for $disk ..."

which grub2-install
if [ $? = 0 ]; then
    grub_cmd="grub2-install"
    grub_cfg="$boot/grub2/grub.cfg"
else
    grub_cmd="grub-install"
    grub_cfg="$boot/grub/grub.cfg"
fi

$grub_cmd --boot-directory=$boot $disk

echo "Generating $grub_cfg ..."
echo "GRUB_TIMEOUT=5" > $grub_cfg

for iso in `ls $boot_iso/*.iso`
do
	fn=`basename $iso`

	dist=`blkid $iso | perl -p -e 's/.*\sLABEL="(.*?)".*/\1/'`
	if [ -z $dist ]; then
		echo "'$iso' is NOT a valid ISO image!"
		echo
		continue
	fi

	echo "generating menuentry for $dist ..."
	case "$dist" in
	RHEL* | CentOS* | OL* | Fedora*)
		uuid=`blkid $part | perl -p -e 's/.*\sUUID="(.*?)".*/\1/'`
		linux="/isolinux/vmlinuz repo=hd:UUID=$uuid:/iso/"
		initrd="/isolinux/initrd.img"
		;;

	Ubuntu* | Deiban*)
		linux="/casper/vmlinuz.efi boot=casper iso-scan/filename=/iso/$fn"
		initrd="/casper/initrd.lz"
		;;
	*)
		echo "Warning: distribution $dist not supported (skipped)!"
		continue
		;;
	esac

cat >> $grub_cfg << OEF

menuentry '$dist' {
	set root='hd0,$index'
	loopback lo /iso/$fn
	linux (lo)/$linux
	initrd (lo)/$initrd
}
OEF

done

echo
